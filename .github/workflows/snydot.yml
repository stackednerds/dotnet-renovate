name: Snyk .NET Scan

on:
  workflow_dispatch:

jobs:
  snyk-dotnet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore all .sln and .csproj files
        run: |
          set -e
          shopt -s globstar nullglob
          for sln in **/*.sln; do
            echo "Restoring $sln"
            dotnet restore "$sln"
          done
          for csproj in **/*.csproj; do
            if ! grep -q "$(basename "$csproj")" **/*.sln 2>/dev/null; then
              echo "Restoring standalone project $csproj"
              dotnet restore "$csproj"
            fi
          done

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Run Snyk in project directories with assets
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          mkdir -p snyk-dotnet-results
          shopt -s globstar nullglob
          found=0

          # Look for directories containing project.assets.json
          for assets in **/obj/project.assets.json; do
            dir=$(dirname "$assets")
            name=$(basename "$dir")
            echo "Running Snyk in $dir"
            found=1

            # Run Snyk test from project directory
            (
              cd "$dir" && snyk test --json > "../../snyk-dotnet-results/${name}.snyk.json"
            ) || true
          done

          if [ $found -eq 0 ]; then
            echo "No projects with project.assets.json found!"
            exit 0
          fi

      - name: Upload Snyk .NET scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: snyk-dotnet-results
          path: snyk-dotnet-results/
